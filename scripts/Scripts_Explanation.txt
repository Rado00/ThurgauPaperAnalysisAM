
FLOW OF THURGAU ANALYSIS SCRIPTS
-----------------------------------------



01_microcensus_population_filter.py (1 TIME FOR SHP)
-----------------------------------------
IN --> 	microzensus/zielpersonen.csv , microzensus/haushalte.csv
		process and merge
OUT --> microzensus/all_population.csv


02_microcensus_trips_filter.py (1 TIME FOR SHP)
-----------------------------------------
IN --> 	microcensus/wege.csv , microcensus/etappen.csv, all_population.csv
		process and divide mic trips based on agents' plan
OUT -->:
		microcensus/row_trips.csv (all trips)
		microcensus/trips_inside_O_and_D_Mic.csv
		microcensus/trips_inside_O_or_D_Mic.csv
		microcensus/population_all_activities_inside_Mic.csv  (3337)
		microcensus/population_at_least_one_activity_inside_Mic.csv (4.757)
		microcensus/trips_all_activities_inside_Mic.csv (12.769)
		microcensus/trips_at_least_one_activity_inside_Mic.csv (18.532)
		3 plots in the plots/ folder
	
CanDo: add filter based on home (commented code)



03_synPop_and_sim_create_csv_files.py (SynPop CSVs only 1 TIME FOR SHP - to be commented)
-----------------------------------------
IN --> 	output_households.xml.gz , output_plans.xml.gz
		no filters
OUT -->:
		0_PreProcess_CSVs_SyntheticAndOutputs\100pct\df_activity_sim.csv
		...\df_legs_sim.csv
		...\df_persons_sim.csv
		...\df_routes_sim.csv
		
        ...\df_activity_synt.csv
        ...\df_legs_synt.csv
        ...\df_persons_synt.csv
        ...\df_routes_synt.csv
        ...\df_households_synt.csv
		

04_synPop_sim_trips.py (1h)(Home population and trips commented because now not necessary)
-----------------------------------------
nrows = 1000 nei test
8 minuti adesso (senza synt e home)

IN --> "sim"\output_trips.csv, output_persons.csv.gz
		WE CHECKED output_plans.persons and output_persons and they are both 398.245 of which 22999 are trucks
		different trips filters 
OUT -->:
		0_PreProcess_CSVs_SyntheticAndOutputs\100pct\trips_inside_O_and_D_sim.csv
		...\trips_inside_O_or_D_sim.csv
		...\population_all_activities_inside_sim.csv
		...\population_at_least_one_activity_inside_sim.csv
		...\trips_at_least_one_activity_inside_sim.csv
		...\trips_all_activities_inside_sim.csv
		**cmntd** ...\population_home_inside_sim.csv
		**cmntd** ...\trips_population_home_inside_sim.csv

		

05_generate_clean_csv_files.py
-----------------------------------------
Ensures persons with only one "Home" activity are handled properly.

IN-->:
		0_PreProcess_CSVs_SyntheticAndOutputs\100pct\df_activity_sim.csv
		...\df_legs_sim.csv
		...\df_persons_sim.csv
		...\df_routes_sim.csv
		
		...\df_activity_synt.csv (SynPop CSVs only 1 TIME FOR SHP - to be commented)
        ...\df_legs_synt.csv
        ...\df_persons_synt.csv
        ...\df_routes_synt.csv
        ...\df_households_synt.csv
		

		microcensus/population_at_least_one_activities_inside_Mic.csv
		microcensus/population_all_activities_inside_Mic.csv
		microcensus/trips_all_activities_inside_Mic.csv
		microcensus/trips_at_least_one_activities_inside_Mic.csv
		microcensus\df_population_mic
		microcensus\df_trips_mic.
		
		0_PreProcess_CSVs_SyntheticAndOutputs\population_all_activities_inside_sim.csv
		0_PreProcess_CSVs_SyntheticAndOutputs\population_at_least_one_activity_inside_sim.csv
		0_PreProcess_CSVs_SyntheticAndOutputs\trips_at_least_one_activity_inside_sim.csv
		0_PreProcess_CSVs_SyntheticAndOutputs\trips_all_activities_inside_sim.csv

processes various things
create_activity_chain_mic(group) and create_activity_chain_syn(group):
Create activity chain summaries from trip/activity sequences.

OUT-->:
		1_Cleaned_CSVs\trips_mic.csv
		1_Cleaned_CSVs\activity_chains_sim.csv
		1_Cleaned_CSVs\activity_chains_mic.csv
		1_Cleaned_CSVs\population_clean_mic.csv
		1_Cleaned_CSVs\population_clean_sim.csv	
		1_Cleaned_CSVs\legs_clean_sim.csv
		
		1_Cleaned_CSVs\trips_at_least_one_activity_inside_sim.csv
		1_Cleaned_CSVs\trips_all_activities_inside_sim.csv
		
		1_Cleaned_CSVs\trips_synt.csv
		1_Cleaned_CSVs\activity_chains_syn.csv
		1_Cleaned_CSVs\population_clean_synth.csv
		1_Cleaned_CSVs\legs_clean_synt.csv

(Commented out: synthetic population outputs)



06_synt_and_sim_mode_share_by_time_distance.py
-----------------------------------------
7 min
2. Define Helper Function
	compute_avg_coordinates(start_link, end_link, link_data):
	Takes the coordinates of a start and end link from a dictionary.
	Calculates the average X and Y coordinate between start and end link (for midpoint mapping).

IN-->:
		output_plans.xml.gz
		working with population.xml.gz (COMMENTED AFTER 1ST)

	Extracts:
		legs (movements)
		routes (travel paths)
		activities (activities at locations)

5. Prepare Link Coordinates
	Builds a dictionary (link_dict_sim_str) mapping each link ID to its (X, Y) coordinates.
	This is used later to assign spatial coordinates to each trip.

Adds average coordinates (X, Y) between start and end links for each trip.

OUT-->:
		travel_time_distance_mode_sim.csv
		travel_time_distance_mode_synt.csv



07_NotUsed_plot_sim_modal_share_by_trips
--------------------------------------------



08_plot_mode_share_time_distance_synt.py
-----------------------------------------
IN -->:
	Microcensus trips: trips_mic.csv
	Synthetic trips: travel_time_distance_mode_synt.csv
	Simulation trips: travel_time_distance_mode_sim.csv

OUT -->:
		Mode_share_by_Travel_Time.png
		Mode_share_time_comparison.csv
		Mode_share_distance_comparison.csv






09_plot_smaller_zones_modal_split.py
-----------------------------------------

IN-->:
		travel_time_distance_mode_synt.csv
		travel_time_distance_mode_sim.csv

Clean and Standardize the Data:

	Removes unwanted modes like truck and outside.
	Formats the mode names (e.g., capitalize and remove underscores).
	Converts travel times from timedelta to seconds.
	Creates a geometry (Point) from x and y coordinates for spatial filtering.

Prepare Geographic Data:
	Loads shapefiles for different analysis zones (Zone01, Zone02, ..., Zone25).
	Filters the synthetic and simulated trips that fall within that zone.

Calculate and Compare Mode Shares (for each zone):

	By Distance:
		Calculates total distance per mode for both synthetic and simulated trips.
		Computes the percentage share of each mode.
		Plots a grouped bar chart comparing Synthetic vs Simulation (Distance share).

	By Travel Time:
		Calculates total travel time per mode.
		Computes percentage share of each mode.
		Plots a grouped bar chart comparing Synthetic vs Simulation (Travel Time share).

	By Number of Trips:
		Counts the number of trips per mode.
		Computes percentage share by trip count.
		Plots a grouped bar chart comparing Synthetic vs Simulation (Number of Trips).

OUT-->:
		Distance share plot.
		Travel time share plot.
		Trip number share plot.
		Saves detailed CSVs comparing synthetic and simulated mode shares.

Export a JSON for ArcGIS Pro:

Collects all percentage share results in a dictionary.

Saves it to a JSON file (arcgis_pro_dict.json) for further spatial analysis or mapping in ArcGIS Pro.

In short:
âœ… Load synthetic and simulated trip data.
âœ… Filter trips by geographic zone.
âœ… Calculate mode share percentages by distance, time, and number of trips.
âœ… Create plots for each zone.
âœ… Save plots and results for further use (including GIS).

Would you also like a visual diagram summarizing this full workflow in a nice schematic? ðŸŽ¯
(very useful if you have to present or document it later!)


10_plot_the_clean_csv_files.py
-----------------------------------------
IN-->:
trips_mic.csv, trips_synt.csv)

Activity chains (activity_chains_syn.csv, activity_chains_sim.csv, activity_chains_mic.csv)

Population (population_clean_mic.csv, population_clean_synth.csv, population_clean_sim.csv)

Legs (legs_clean_synt.csv, legs_clean_sim.csv)

Households (df_households_synt.csv)

Activities (df_activity_synt.csv, df_activity_sim.csv)

3. Preprocessing
Standardizes gender labels (male/female â†’ Male/Female).

Renames household weight column if necessary.

4. Generate Plots and Summaries
The script creates multiple comparison plots:

4.1 Gender Distribution
Pie charts comparing gender distribution between:

Microcensus population

Synthetic population

4.2 Household Income Distribution
Bar plots comparing household income classes between microcensus and synthetic households:

Using household weights

Using direct counts

4.3 Car Ownership
Bar plots comparing number of cars owned:

Using weighted and unweighted counts.

4.4 Activity Type & Trip Purpose
Bar plots comparing:

Activity types (synthetic population)

Trip purposes (microcensus)

Excludes irrelevant activities like outside, freight_loading, etc.

4.5 Mode Share
Bar plots comparing transportation mode usage across datasets:

Microcensus

Synthetic

Simulation results

4.6 Age Distribution
Bar plots comparing age distributions:

Microcensus (weighted and unweighted)

Synthetic population

4.7 Departure & Arrival Times
Bar plots comparing:

Departure times of trips

Arrival times of trips

4.8 Activity Chains
Bar plots comparing the most frequent activity chains:

Top 10 activity chains comparison

Full distribution comparison

4.9 Save Results
All plots are saved as high-resolution PNG images.

Additionally, a final CSV file (mode_share_trip_comparison.csv) summarizing mode shares across datasets is generated and saved.

Would you also like me to help you structure all these steps into a nice formatted document that you could directly use for project documentation? ðŸš€
(Example: a clean script description or README)


11_CSVs_in_a_column.py
-----------------------------------------
IN-->:
		mode_share_trip_comparison.csv
		Mode_share_distance_comparison.csv
		Mode_share_time_comparison.csv

mode_mappings, ,to. , organises in a single CSV

OUT-->:
		mode_share_directory\modalSplitCalibration.csv



10_DRT_Data_Analysis.py
-----------------------------------------
Will include DRT analysis